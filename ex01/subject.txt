Globant Piscine
TripRecommendator
Summary: From Middle-earth to Anor Londo — we’ll find your kind of adventure.
Version: 2
Contents
I A word about this Project 2
II Introduction 3
III General instructions 4
IV Glossary 5
V Mandatory part 7
VI Bonus Part 9
VII Resources 10
VIII Submission 12
1
Chapter I
A word about this Project
The goal is to develop a modern, responsive frontend application where users can describe
their ideal trip in free-text form. Using AI tools and third-party APIs, the app will
identify potential travel destinations and display them on a custom interactive map. The
project is developed primarily with TypeScript, following a mobile-first design approach
to ensure accessibility, usability, and a seamless experience across all devices.
2
Chapter II
Introduction
What this Project will show you:
• How to create a modern frontend application using TypeScript, with a mobilefirst design approach.
• Handling free-text input from users and processing it through AI tools and thirdparty APIs.
• Integrating AI-powered services to interpret user intent and suggest relevant travel
destinations.
• Displaying suggested locations on a custom interactive map using mapping libraries such as Mapbox or Leaflet.js.
• Applying a minimum accessibility standard for improved user interaction and
inclusion.
• Ensuring user experience (UX) remains at the forefront of the application’s
visual and functional design.
• Exploring advanced UX features such as speech-to-text input, image recognition, and the ability to draw custom areas on the map for enhanced user
input.
• Following good development practices such as code modularity, component
reuse, and clear API communication handling.
• Setting up a complete development environment using using Docker and Docker
Compose.
• Gaining experience in building, running, and deploying production-grade applications.
3
Chapter III
General instructions
Unless explicitely specified, the following rules will apply for every project of this Piscine.
• This subject is the one and only trustable source. Don’t trust any rumor.
• This subject can be updated up to one hour before the turn-in deadline.
• The assignments in a subject must be done in the given order. Later assignments
won’t be rated unless all the previous ones are perfectly executed.
• Be careful about the access rights of your files and folders.
• Your assignments WON’T be evaluated by your Piscine peers.
• You must not leave in your turn-in your workspace any file other than the ones
explicitly requested By the assignments. If the assignment don’t precise them, put
only the necessary ones to run your Project.
• Using some API Key or Token? Keep them for you! Do not push them on your
repository.
• You have a question? Ask your left neighbor. Otherwise, try your luck with your
right neighbor.
• Every technical answer you might need is available in the man or on the Internet.
• You must read the examples thoroughly. They can reveal requirements that are not
obvious in the assignment’s description.
• By Loki, by Freya! Use your brain!!!
4
Chapter IV
Glossary
This glossary is designed to help you quickly understand the main technologies and concepts you will work with in TripRecommendator. In Chapter VII, you’ll find extra
resources and tutorials to get started confidently.
• TypeScript: A programming language that extends JavaScript, used mainly in
frontend and backend web development for greater safety and scalability.
• Tailwind: A CSS framework for creating responsive and customizable user interfaces, commonly used in frontend design.
• Docker: A platform that allows you to create and run applications inside isolated
containers.
• Docker Compose: A tool for defining and managing multiple Docker containers
at once.
• OAuth2: A standard authorization protocol that provides secure access to resources on behalf of a user and helps protect user credentials.
• API (Application Programming Interface): An interface that allows two applications to communicate and share data.
• WCAG 2.1 Level AA: A set of web accessibility guidelines designed to make
websites more usable for people with disabilities.
• Responsive Design: A design approach that ensures a website or web application looks and works well on devices of all sizes, from mobile phones to desktop
computers.
• Mobile-First: A design philosophy that prioritizes creating the mobile version of
a website or app before scaling up to larger screens.
• OpenAI API: A service that provides access to AI models capable of understanding and generating human-like text, used here for interpreting travel-related queries.
• Mapbox / Leaflet.js: Mapping libraries used to display interactive maps, geolocate destinations, and add custom markers dynamically.
• WCAG 2.1 Level AA: International accessibility guidelines that aim to make
web content more usable for people with disabilities.
5
Globant Piscine TripRecommendator
• UX (User Experience): The overall experience and satisfaction a user has when
interacting with a product, system, or interface.
6
Chapter V
Mandatory part
Exercise 00
TripRecommendator
Turn-in directory : ex00/
Files to turn in : All needed files to run your Project and nothing else
Allowed functions : None
• You must include a README.md file in your repository explaining briefly the
project and how to run it.
• Docker is mandatory for this project. You must provide a Dockerfile and a dockercompose.yml file to run your project.
• Free-Text Input for Trip Location
◦ Users will enter their desired travel location or preferences in free-text format
like (a <textarea>).
◦ The application will process the input through a Natural Language Processing (NLP) model (e.g., OpenAI API) to extract and return structured travel
destinations.
• AI and API Integration
◦ All frontend logic, including API requests and data processing, must be implemented in TypeScript.
◦ The app will use AI-powered tools to interpret the user’s input and suggest
potential travel locations.
◦ These travel destinations will be shown on a custom interactive map built with
Mapbox or Leaflet.js.
◦ The app will use a geocoding service to obtain coordinates for each destination
and displays them with custom markers and interactive pop-ups.
7
Globant Piscine TripRecommendator
• Mobile-First Design
◦ The app will be designed with a mobile-first approach, using Tailwind for rapid
UI development and ensuring full responsiveness across devices.
◦ Responsive design principles will ensure the app adapts well to different screen
sizes.
• Accessibility Focus
◦ The app will have a minimum accessibility standard, focusing on ensuring that
users with different needs can interact with the app.
◦ While strict compliance with WCAG standards isn’t mandatory, the app
should provide a basic level of accessibility.
◦ The app will implement accessibility best practices such as semantic HTML,
keyboard navigation, proper color contrast, and ARIA attributes to enhance
usability for all users.
You may want to take a look at every technologies referenced in the
project description before starting.
In any of the projects that require the consumption of an API you
can leverage the use of a library to help you with it like swe or
TanStack Query
8
Chapter VI
Bonus Part
Once mandatory requirements are implemented in the application, you can add any
additional features you see fit. Here a quick list of suggestions to give you ideas.
• Alternative Input Methods
◦ Support for speech-to-text input using the browser’s Web Speech API,
allowing users to describe their desired travel location verbally.
◦ Image recognition functionality, where users can upload or capture images
related to their desired travel location for AI interpretation or image recognition API.
◦ Implement a “Draw on Map” feature to let users define custom search areas.
◦ Integrate external travel APIs (e.g., Skyscanner, Amadeus) to display estimated flight prices, hotels, or points of interest for selected destinations.
• User Experience Focus
◦ The overall user experience (UX) should be smooth and intuitive, focusing
on easy navigation and quick access to the list of travel locations.
◦ Providing users with a curated list of destinations based on their input should
always be the main priority.
◦ Reuse pre-built components, such as a lazy-loading image display, to enhance
performance and maintain consistency.
Those are only examples. The sky’s the limit so again, once
mandatory functional requirements are met, we are open to any
additional functionalities you see fit.
9
Chapter VII
Resources
This chapter provides a collection of useful resources to help you get started with the
technologies used in this project.
You’ll find links to articles, tutorials, and videos — both in English and Spanish — as
well as simple code examples to help you understand key concepts and start experimenting
on your own.
These materials are meant to guide you a little if you get stuck, but we highly recommend that you keep exploring on your own.
• Docker
◦ Article 1
◦ Article 2
◦ Article 3
◦ Video
• What is a framework?
◦ Article 1
◦ Article 2
◦ Article 3
• Typescript
◦ Video 1
◦ Video 2
◦ Video 3
• Tailwind CSS
◦ Article 1
◦ Article 2
10
Globant Piscine TripRecommendator
◦ Video 1
◦ Video 2
We provide you an example below as a basic example to illustrate Tailwind usage.
It does not include the full project setup.
<div class="p-4 md:p-8">
<label for="trip-description" class="block text-lg font-medium text-gray-700">
Describe your perfect trip:
</label>
<textarea
id="trip-description"
class="mt-2 block w-full rounded-md border-gray-300 shadow-sm
focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
rows="4"
placeholder="e.g., a quiet city in Europe with great museums and coffee shops"
></textarea>
<button class="mt-4 w-full rounded-md bg-blue-600 px-4 py-2 text-white
font-semibold hover:bg-blue-700 md:w-auto">
Find Destinations
</button>
</div>
11
Chapter VIII
Submission
• Create a git repo (Github, Gitlab, Bitbucket, etc) and add your project files to it.
• Copy the link to your repository and paste it in the project submission form.
• Project submission form: TYPEFORM
Please note, no modifications made on the repo after the form is sent
will be taken into account for the evaluation.
No Peer evaluation for this Piscine, but we strongly recommend
reviewing and using the evaluation sheet we give you to check if
your project meets all the requirements.
12